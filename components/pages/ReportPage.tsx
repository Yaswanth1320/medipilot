import { SessionType } from "@/app/(routes)/dashboard/conversation/[sessionId]/page";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { Stethoscope } from "lucide-react";

type ReportPageProps = {
  record: SessionType;
};

// Reusable component for each section (Title + Blue Line + Content)
const ReportSection = ({
  title,
  children,
}: {
  title: string;
  children: React.ReactNode;
}) => (
  <div className="mb-6">
    <h3 className="text-lg font-semibold text-blue-600">{title}</h3>
    <div className="border-b-2 border-blue-500 mt-1 mb-3"></div>
    <div className="text-slate-700">{children}</div>
  </div>
);

// Reusable component for key-value pairs in the Session Info
const InfoItem = ({ label, value }: { label: string; value: string }) => (
  <div>
    <span className="text-sm font-medium text-slate-500">{label}: </span>
    <span className="text-sm text-slate-800">{value}</span>
  </div>
);

function ReportPage({ record }: ReportPageProps) {
  if (!record?.report) {
    return <span className="text-slate-500 italic">No report available</span>;
  }

  const { report } = record;

  const consultedOnDate = record.createdOn
    ? new Date(record.createdOn).toLocaleString(undefined, {
        dateStyle: "long",
        timeStyle: "short",
      })
    : "N/A";

  return (
    <Dialog>
      <DialogTrigger className="text-blue-500 hover:underline">
        View Report
      </DialogTrigger>
      <DialogContent className="bg-white text-black max-w-3xl p-8 flex flex-col h-[90vh] overflow-hidden">
        <DialogHeader className="flex flex-row items-center space-x-3 mb-4">
          <Stethoscope className="h-8 w-8 text-blue-600" />
          <DialogTitle className="text-2xl font-bold text-slate-800">
            Medical AI Agent Report
          </DialogTitle>
        </DialogHeader>

        <div className="flex-1 overflow-y-auto [&::-webkit-scrollbar]:hidden scrollbar-none pr-4 -mr-4">
          <ReportSection title="Session Info">
            <div className="grid grid-cols-2 gap-x-8 gap-y-2">
              <InfoItem label="User" value={record?.createdBy ?? "Anonymous"} />
              <InfoItem label="Agent" value={record?.selectedDoctor?.specialist ?? "N/A"} />
              <InfoItem label="Consulted On" value={consultedOnDate} />
            </div>
          </ReportSection>

          <ReportSection title="Chief Complaint">
            <p>{report.chiefComplaint}</p>
          </ReportSection>

          <ReportSection title="Summary">
            <p className="leading-relaxed">{report.summary}</p>
          </ReportSection>

          <ReportSection title="Symptoms">
            <ul className="list-disc list-inside space-y-1">
              {report.symptoms.map((symptom, index) => (
                <li key={index}>{symptom}</li>
              ))}
            </ul>
          </ReportSection>

          <ReportSection title="Duration & Severity">
            <div className="flex space-x-12">
              <InfoItem label="Duration" value={report.duration} />
              <InfoItem label="Severity" value={report.severity} />
            </div>
          </ReportSection>

          {/* --- NEW: Medications Mentioned Section (Conditionally Rendered) --- */}
          {report.medicationsMentioned && report.medicationsMentioned.length > 0 && (
            <ReportSection title="Medications Mentioned">
              <ul className="list-disc list-inside space-y-1">
                {report.medicationsMentioned.map((med, index) => (
                  <li key={index}>{med}</li>
                ))}
              </ul>
            </ReportSection>
          )}

          <ReportSection title="Recommendations">
            <ul className="list-disc list-inside space-y-1">
              {report.recommendations.map((rec, index) => (
                <li key={index}>{rec}</li>
              ))}
            </ul>
          </ReportSection>
        </div>

        <div className="mt-6 pt-4 border-t text-xs text-slate-500 text-center">
          This report was generated by {report.agent} for informational purposes
          only. Always consult with a qualified healthcare professional for
          medical advice.
        </div>
      </DialogContent>
    </Dialog>
  );
}

export default ReportPage;